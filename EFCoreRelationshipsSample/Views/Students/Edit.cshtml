@model StudentEditViewModel

@{
    ViewData["Title"] = $"Edit {Model.FullName}";
}

<h1>Edit Student</h1>

<h4>Student Information</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" id="studentForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            
            <div class="form-group mb-3">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" class="form-control" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>

            <h5 class="mt-4">Course Enrollment</h5>
            <hr />
            
            <div class="form-group mb-3">
                <label for="courseDropdown" class="control-label">Select a Course to Add</label>
                <div class="input-group">
                    <select id="courseDropdown" class="form-select">
                        <option value="">-- Select a Course --</option>
                        @foreach (var course in Model.AvailableCourses)
                        {
                            <option value="@course.Id">@course.CourseTitle (@course.Credits credits)</option>
                        }
                    </select>
                    <button type="button" class="btn btn-success" id="addCourseBtn">
                        <i class="bi bi-plus-circle"></i> Add Course
                    </button>
                </div>
            </div>

            <div class="form-group mb-3">
                <label class="control-label">Enrolled Courses</label>
                <div id="enrolledCoursesList" class="border rounded p-3" style="min-height: 100px; background-color: #f8f9fa;">
                    @if (Model.EnrolledCourses.Any())
                    {
                        @foreach (var course in Model.EnrolledCourses)
                        {
                            <div class="enrolled-course d-flex justify-content-between align-items-center mb-2 p-2 bg-white border rounded" data-course-id="@course.Id">
                                <span>@course.CourseTitle (@course.Credits credits)</span>
                                <button type="button" class="btn btn-sm btn-danger remove-course-btn">
                                    <i class="bi bi-x-circle"></i> Remove
                                </button>
                                <input type="hidden" name="SelectedCourseIds" value="@course.Id" />
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted mb-0">No courses enrolled yet.</p>
                    }
                </div>
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Save Changes" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Add course button click handler
            $('#addCourseBtn').click(function() {
                var dropdown = $('#courseDropdown');
                var selectedCourseId = dropdown.val();
                var selectedCourseText = dropdown.find('option:selected').text();
                
                if (!selectedCourseId) {
                    alert('Please select a course to add.');
                    return;
                }
                
                // Check if course is already added
                if ($('.enrolled-course[data-course-id="' + selectedCourseId + '"]').length > 0) {
                    alert('This course is already in the student\'s schedule.');
                    return;
                }
                
                // Create new course element
                var courseHtml = '<div class="enrolled-course d-flex justify-content-between align-items-center mb-2 p-2 bg-white border rounded" data-course-id="' + selectedCourseId + '">' +
                    '<span>' + selectedCourseText + '</span>' +
                    '<button type="button" class="btn btn-sm btn-danger remove-course-btn">' +
                    '<i class="bi bi-x-circle"></i> Remove' +
                    '</button>' +
                    '<input type="hidden" name="SelectedCourseIds" value="' + selectedCourseId + '" />' +
                    '</div>';
                
                // Remove "no courses" message if it exists
                $('#enrolledCoursesList p.text-muted').remove();
                
                // Add the course to the list
                $('#enrolledCoursesList').append(courseHtml);
                
                // Reset Course Add dropdown
                dropdown.val('');
            });
            
            // Remove course button click handler (using event delegation)
            $('#enrolledCoursesList').on('click', '.remove-course-btn', function() {
                $(this).closest('.enrolled-course').remove();
                
                // If no courses left, show "no courses" message
                if ($('.enrolled-course').length === 0) {
                    $('#enrolledCoursesList').html('<p class="text-muted mb-0">No courses enrolled yet.</p>');
                }
            });
        });
    </script>
}
